#include "paleta.h"

#define INTR 0X1C

#ifdef __cplusplus
    #define __CPPARGS ...
#else
    #define __CPPARGS
#endif

unsigned s,o;

void interrupt ( *oldhandler)(__CPPARGS);

int count=0;

char col1[48]= {
		58,58,63,
		43,43,46,
		32,32,32,
		63,39,5,
		63,48,18,
		63,63,0,
		43,0,0,
		54,0,0,
		63,19,2,
		63,40,9,
		63,53,0,
		0,0,30,
		0,0,50,
		0,0,63,
		11,28,63,
		0,0,0 }; // 20,40,63

char col2[48]= {
		32,32,32,
		58,58,63,
		43,43,46,
		63,63,0,
		63,39,5,
		63,48,18,
		63,53,0,
		43,0,0,
		54,0,0,
		63,19,2,
		63,40,9,
		20,40,63,
		0,0,30,
		0,0,50,
		0,0,63,
		0,0,0, }; //11,28,63

char col3[48]= {
		43,43,46,
		32,32,32,
		58,58,63,
		63,48,18,
		63,63,0,
		63,39,5,
		63,40,9,
		63,53,0,
		43,0,0,
		54,0,0,
		63,19,2,
		11,28,63,
		20,40,63,
		0,0,30,
		0,0,50,
		0,0,0, };// 0 0 63

char col4[48]= {
		58,58,63,
		43,43,46,
		32,32,32,
		63,39,5,
		63,48,18,
		63,63,0,
		63,19,2,
		63,40,9,
		63,53,0,
		43,0,0,
		54,0,0,
		0,0,63,
		11,28,63,
		20,40,63,
		0,0,30,
		0,0,0,};// 0,0,50

char col5[48]= {
		32,32,32,
		58,58,63,
		43,43,46,
		63,63,0,
		63,39,5,
		63,48,18,
		54,0,0,
		63,19,2,
		63,40,9,
		63,53,0,
		43,0,0,
		0,0,50,
		0,0,63,
		11,28,63,
		20,40,63,
		0,0,0, }; // 0 0 30

char col6[48]= {
		43,43,46,
		32,32,32,
		58,58,63,
		63,48,18,
		63,63,0,
		63,39,5,
		43,0,0,
		54,0,0,
		63,19,2,
		63,40,9,
		63,53,0,
		0,0,30,
		0,0,50,
		0,0,63,
		11,28,63,
		0,0,0, };// 20 , 40 , 63

char col7[48]= {
		58,58,63,
		43,43,46,
		32,32,32,
		63,39,5,
		63,48,18,
		63,63,0,
		63,53,0,
		43,0,0,
		54,0,0,
		63,19,2,
		63,40,9,
		20,40,63,
		0,0,30,
		0,0,50,
		0,0,63,
		0,0,0, };// 11 28 63

char col8[48]= {
		32,32,32,
		58,58,63,
		43,43,46,
		63,63,0,
		63,39,5,
		63,48,18,
		63,40,9,
		63,53,0,
		43,0,0,
		54,0,0,
		63,19,2,
		11,28,63,
		20,40,63,
		0,0,30,
		0,0,50,
		0,0,0, };//0 0 63

char col9[48]= {
		43,43,46,
		32,32,32,
		58,58,63,
		63,48,18,
		63,63,0,
		63,39,5,
		63,19,2,
		63,40,9,
		63,53,0,
		43,0,0,
		54,0,0,
		0,0,63,
		11,28,63,
		20,40,63,
		0,0,30,
		0,0,0, };// 0 0 50

char col10[48]= {
		58,58,63,
		43,43,46,
		32,32,32,
		63,39,5,
		63,48,18,
		63,63,0,
		54,0,0,
		63,19,2,
		63,40,9,
		63,53,0,
		43,0,0,
		0,0,50,
		0,0,63,
		11,28,63,
		20,40,63,
		0,0,0, };// 0 0 30


char col11[48]= {
		32,32,32,
		58,58,63,
		43,43,46,
		63,63,0,
		63,39,5,
		63,48,18,
		43,0,0,
		54,0,0,
		63,19,2,
		63,40,9,
		63,53,0,
		0,0,30,
		0,0,50,
		0,0,63,
		11,28,63,
		0,0,0, };// 20 40 63

char col12[48]= {
		43,43,46,
		32,32,32,
		58,58,63,
		63,48,18,
		63,63,0,
		63,39,5,
		63,53,0,
		43,0,0,
		54,0,0,
		63,19,2,
		63,40,9,
		20,40,63,
		0,0,30,
		0,0,50,
		0,0,63,
		0,0,0, };// 11,28,63

char col13[48]= {
		58,58,63,
		43,43,46,
		32,32,32,
		63,39,5,
		63,48,18,
		63,63,0,
		63,40,9,
		63,53,0,
		43,0,0,
		54,0,0,
		63,19,2,
		11,28,63,
		20,40,63,
		0,0,30,
		0,0,50,
		0,0,0, };// 0 0 63

char col14[48]= {
		32,32,32,
		58,58,63,
		43,43,46,
		63,63,0,
		63,39,5,
		63,48,18,
		63,19,2,
		63,40,9,
		63,53,0,
		43,0,0,
		54,0,0,
		0,0,63,
		11,28,63,
		20,40,63,
		0,0,30,
		0,0,0, };// 0 0 50

char col15[48]= {
		43,43,46,
		32,32,32,
		58,58,63,
		63,48,18,
		63,63,0,
		63,39,5,
		54,0,0,
		63,19,2,
		63,40,9,
		63,53,0,
		43,0,0,
		0,0,50,
		0,0,63,
		11,28,63,
		20,40,63,
		0,0,0, };// 0 0 30

void interrupt handler(__CPPARGS)
{
  switch( ++count )
  {
   case 4:
    s=FP_SEG(col1);o=FP_OFF(col1);
    break;
   case 8:
    s=FP_SEG(col2);o=FP_OFF(col2);
    break;
   case 12:
    s=FP_SEG(col3);o=FP_OFF(col3);
    break;
   case 16:
    s=FP_SEG(col4);o=FP_OFF(col4);
    break;
   case 20:
    s=FP_SEG(col5);o=FP_OFF(col5);
    break;
   case 24:
    s=FP_SEG(col6);o=FP_OFF(col6);
    break;
   case 28:
    s=FP_SEG(col7);o=FP_OFF(col7);
    break;
   case 32:
    s=FP_SEG(col8);o=FP_OFF(col8);
    break;
   case 36:
    s=FP_SEG(col9);o=FP_OFF(col9);
    break;
   case 40:
    s=FP_SEG(col10);o=FP_OFF(col10);
    break;
   case 44:
    s=FP_SEG(col11);o=FP_OFF(col11);
    break;
   case 48:
    s=FP_SEG(col12);o=FP_OFF(col12);
    break;
   case 52:
    s=FP_SEG(col13);o=FP_OFF(col13);
    break;
   case 56:
    s=FP_SEG(col14);o=FP_OFF(col14);
    break;
   case 60:
    s=FP_SEG(col15);o=FP_OFF(col15);
    count=0;
    break;
  }

 // wait retrace
  asm	mov dx,0x3DA

 l1:

  asm	in al,dx
  asm	and al,0x08
  asm	jnz l1

 l2:

  asm	in al,dx
  asm	and al,0x08
  asm	jz  l2


  // set color registers
  asm {
	mov ah,10h
	mov al,12h
	mov bx, s
	mov es, bx
	mov dx, o
	mov bx,240
	mov cx,16
	int 10h
  }

  oldhandler();
}


void InstallPaletteRotator(void)
{
   oldhandler = getvect(INTR);
   setvect(INTR, handler);
}


void DeinstallPaletteRotator(void)
{
   setvect(INTR, oldhandler);
}

